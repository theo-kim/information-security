
class RepyParityError(Exception):
    pass

class EvenParityFile():
    def __init__(self, filename, create):
      # globals
      mycontext['debug'] = False
      # local (per object) reference to the underlying file
      self.fn = filename

      self.file = openfile(self.fn, create)


    def checkpar(self, data):
        # check 8 byte sum for evenparity
        total = 0
        for i in range(8):
            try:
                total += ord(data[i])
            except:
                if total % 2 == 0:
                    return True
                else:
                    return False
        if total % 2 == 0:
            return checkpar(data[8:])
        else:
            return False

    def writeat(self,data,offset):
    # check the parity of the data written
        check = self.checkpar(data)
        if check:
            self.file.writeat(data, offset)
        else:
          raise RepyParityError("Non-even parity write to file")


    def readat(self,bytes,offset):
    # Read from the file using the sandbox's readat...
      return self.file.readat(bytes,offset)

    def close(self):
        self.file.close()

def parityopenfile(filename, create):
    return EvenParityFile(filename,create)




# The code here sets up type checking and variable hiding for you.  You
# should not need to change anything below here.
sec_file_def = {"obj-type":EvenParityFile,
                "name":"EvenParityFile",
                "writeat":{"type":"func","args":(str,(int,long)),"exceptions":Exception,"return":(int,type(None)),"target":EvenParityFile.writeat},
                "readat":{"type":"func","args":((int,long,type(None)),(int,long)),"exceptions":Exception,"return":str,"target":EvenParityFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":EvenParityFile.close}
           }

CHILD_CONTEXT_DEF["openfile"] = {"type":"objc","args":(str,bool),"exceptions":Exception,"return":sec_file_def,"target":parityopenfile}
CHILD_CONTEXT_DEF["RepyParityError"] = {"type":"any","target":RepyParityError}
# Execute the user code
secure_dispatch_module()
