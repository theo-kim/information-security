#Sabrina Supapkooha
#sps450

"""
This security layer inadequately handles parity for files in RepyV2.



Note:
    This security layer uses encasementlib.r2py, restrictions.default, repy.py and Python
    Also you need to give it an application to run.
    python repy.py restrictions.default encasementlib.r2py [security_layer].r2py [attack_program].r2py 
    
    """ 
class RepyParityError(Exception):
    pass

class EvenParityFile():
  def __init__(self,filename,create):
    # globals
    mycontext['debug'] = False   
    # local (per object) reference to the underlying file
    self.fn = filename
 
    self.file = openfile(self.fn,create)


  def writeat(self,data,offset):
   
    # check the parity of the data written
    thisdata = data
	thisoffset = offset
	
    odd_bytecounter = 0
    even_bytecounter = 0
	
	# checks if the offset result will in a non-even 8-byte sequence (i.e. 8 + 15 = 23 (non-even); 8 + 16 = 24 (even))
	if thisoffset % 8 != 0:
		raise RepyParityError("Non-even parity write to file")
		
    while thisdata:
        eightbytesequence = thisdata[:8]
        thisdata = thisdata[8:]
        even = True
		
		# checks if there is an even number of non-even bytes per 8-byte sequence (a.k.a parity is even)
        for thisbyte in eightbytesequence:
            if ord(thisbyte) % 2 == 1:
                odd_bytecounter += 1
            else:
                even_bytecounter += 1

		# checks if there is an odd number of non-even bytes; allows for writeat even if there is an even number of odd bytes
        if odd_bytecounter % 2 != 0:
            even = False

        if even:
            self.file.writeat(eightbytesequence,offset)

        else:
            raise RepyParityError("Non-even parity write to file")
  
  def readat(self,bytes,offset):
    # Read from the file using the sandbox's readat...
    return self.file.readat(bytes,offset)

  def close(self):
    self.file.close()

def parityopenfile(filename, create):
  return EvenParityFile(filename,create)




# The code here sets up type checking and variable hiding for you.  You
# should not need to change anything below here.
sec_file_def = {"obj-type":EvenParityFile,
                "name":"EvenParityFile",
                "writeat":{"type":"func","args":(str,(int,long)),"exceptions":Exception,"return":(int,type(None)),"target":EvenParityFile.writeat},
                "readat":{"type":"func","args":((int,long,type(None)),(int,long)),"exceptions":Exception,"return":str,"target":EvenParityFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":EvenParityFile.close}
           }

CHILD_CONTEXT_DEF["openfile"] = {"type":"objc","args":(str,bool),"exceptions":Exception,"return":sec_file_def,"target":parityopenfile}
CHILD_CONTEXT_DEF["RepyParityError"] = {"type":"any","target":RepyParityError}
# Execute the user code
secure_dispatch_module()
