"""
This security layer handles parity for files in RepyV2.


Note:
    This security layer uses encasementlib.r2py, restrictions.default, repy.py and Python
    Also you need to give it an application to run.
    python repy.py restrictions.default encasementlib.r2py [security_layer].r2py [attack_program].r2py 
    
    """ 
class RepyParityError(Exception):
    pass

class EvenParityFile():
  def __init__(self,filename,create):
    # globals
    mycontext['debug'] = False   
    # local (per object) reference to the underlying file
    self.fn = filename
    self.file = openfile(self.fn,create)


  def writeat(self,data,offset):
    numBeforeInBlock=offset%8
    startIndex=offset-numBeforeInBlock
    lastByteChanged=offset+len(data)
    numAfterInBlock= (7-((lastByteChanged)%8))
    end=lastByteChanged+numAfterInBlock
    str1=self.readat(numBeforeInBlock,startIndex)
    #log(str1)
    str2=""
    test=numAfterInBlock
    while test>=1:
      try:
        str2=self.readat(test,lastByteChanged)
        break
      except SeekPastEndOfFileError:
        test=test-1
    #log(str2)
    strToCompare=str1+data+str2
    #log(data)
    #log(strToCompare)
    thisdata = strToCompare
    while thisdata:
        if len(thisdata[:8])<8:
          break
        eightbytesequence = thisdata[:8]
        thisdata = thisdata[8:]
        c=0
        for thisbyte in eightbytesequence:
          if ord(thisbyte) % 2:
            c=c+1
        #log(c)
        if c%2:
          raise RepyParityError("Non-even parity write to file")
    self.file.writeat(data,offset)


  def readat(self,bytes,offset):
    # Read from the file using the sandbox's readat...
    return self.file.readat(bytes,offset)


  def close(self):
      self.file.close()


def parityopenfile(filename, create):
  return EvenParityFile(filename,create)


# The code here sets up type checking and variable hiding for you.  You
# should not need to change anything below here.
sec_file_def = {"obj-type":EvenParityFile,
                "name":"EvenParityFile",
                "writeat":{"type":"func","args":(str,(int,long)),"exceptions":Exception,"return":(int,type(None)),"target":EvenParityFile.writeat},
                "readat":{"type":"func","args":((int,long,type(None)),(int,long)),"exceptions":Exception,"return":str,"target":EvenParityFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":EvenParityFile.close}
           }

CHILD_CONTEXT_DEF["openfile"] = {"type":"objc","args":(str,bool),"exceptions":Exception,"return":sec_file_def,"target":parityopenfile}
CHILD_CONTEXT_DEF["RepyParityError"] = {"type":"any","target":RepyParityError}
# Execute the user code
secure_dispatch_module()