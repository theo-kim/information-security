"""
Note:
    This security layer uses encasementlib.r2py, restrictions.default, repy.py and Python
    Also you need to give it an application to run.
    python repy.py restrictions.default encasementlib.r2py [security_layer].r2py [attack_program].r2py 
    
    """ 
class RepyParityError(Exception):
    pass

class EvenParityFile():
  def __init__(self,filename,create):
    mycontext['debug'] = False   
    self.fn = filename
    self.file = openfile(self.fn,create)

  # goes through file to see if adding the eight bytes will invalidate the file
  def shouldWeWrite(self, toWrite):
    currContents = self.readat(None, 0)
    currContents += toWrite
    weShouldWrite = False
    while currContents:
      eightbytesequence = currContents[:8]
      currContents = currContents[8:]
      even = True
      for thisbyte in eightbytesequence:
        if ord(thisbyte) % 2:
          even = not even
          
      if even:
        weShouldWrite = True
      else:
        weShouldWrite = False
    
    return weShouldWrite

  def writeat(self,data,offset):
    thisdata = data
    while thisdata:
        eightbytesequence = thisdata[:8]
        thisdata = thisdata[8:]
        even = True
        for thisbyte in eightbytesequence:
          if ord(thisbyte) % 2:
            even = not even
            
        if even and self.shouldWeWrite(eightbytesequence):
          self.file.writeat(eightbytesequence,offset)
        else:
          raise RepyParityError("Non-even parity write to file")
  
  
  def readat(self,bytes,offset):
    return self.file.readat(bytes,offset)

  def close(self):
    self.file.close()


def parityopenfile(filename, create):
  return EvenParityFile(filename,create)




# The code here sets up type checking and variable hiding for you.  You
# should not need to change anything below here.
sec_file_def = {"obj-type":EvenParityFile,
                "name":"EvenParityFile",
                "writeat":{"type":"func","args":(str,(int,long)),"exceptions":Exception,"return":(int,type(None)),"target":EvenParityFile.writeat},
                "readat":{"type":"func","args":((int,long,type(None)),(int,long)),"exceptions":Exception,"return":str,"target":EvenParityFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":EvenParityFile.close}
           }

CHILD_CONTEXT_DEF["openfile"] = {"type":"objc","args":(str,bool),"exceptions":Exception,"return":sec_file_def,"target":parityopenfile}
CHILD_CONTEXT_DEF["RepyParityError"] = {"type":"any","target":RepyParityError}
# Execute the user code
secure_dispatch_module()
