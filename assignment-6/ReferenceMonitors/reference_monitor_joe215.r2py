class RepyParityError(Exception):
	pass

class EvenParityFile():
	def __init__(self, filename, create):
		mycontext['debug'] = False
		self.fn = filename
		self.file = openfile(self.fn, create)
	
	def writeat(self, data, offset):
		thisdata = data
		bottom = 0
		top = bottom + 8
		toEE = offset + len(thisdata)
		readTop = toEE + (8 - toEE%8)
		txt = thisdata
		control = toEE
		if bottom == offset:
			writePerm = self.writeCheck(bottom, top, control, txt)
		elif bottom != offset:
			try:
				control = readTop
				txt = self.file.readat(offset-bottom, bottom) + thisdata + self.file.readat(readTop - toEE, toEE + 1)
				writePerm = self.writeCheck(bottom, top, control, txt)
			except SeekPastEndOfFileError:
				control = toEE
				txt = self.file.readat(offset-bottom, bottom) + thisdata
				writePerm = self.writeCheck(bottom, top, control, txt)
		if writePerm:
			self.file.writeat(thisdata, offset)
		else:
			raise RepyParityError("Non-even write to file")
	def writeCheck(self, bottom, top, control, txt):
		#log(txt)
		while bottom < control:
			tmp = txt[bottom:top]
			#log(tmp)
			#log('\n')
			count = 0
			for byte in tmp:
				if ord(byte) % 2 != 0:
					count += 1
			#log('\n')
			if count % 2 == 0 or len(tmp) != 8:
				pass
			else:
				return False
			
			if top + 8 < control:
				top += 8
				bottom += 8
			else:
				top += (control - top)
				bottom += 8
		return True
	
	def readat(self, bytes, offset):
		return self.file.readat(bytes, offset)

	def close(self):
		self.file.close()


def parityopenfile(filename, create):
	return EvenParityFile(filename, create)

sec_file_def = {"obj-type":EvenParityFile,
		"name":"EvenParityFile",
		"writeat":{"type":"func", "args":(str,(int,long)), "exceptions":Exception, "return":(int,type(None)), "target":EvenParityFile.writeat},"readat":{"type":"func","args":((int, long, type(None)), (int, long)), "exceptions":Exception,"return":str,"target":EvenParityFile.readat},"close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)), "target":EvenParityFile.close}
}

CHILD_CONTEXT_DEF["openfile"] = {"type":"objc", "args":(str,bool),"exceptions":Exception,"return":sec_file_def,"target":parityopenfile}

CHILD_CONTEXT_DEF["RepyParityError"] = {"type":"any","target":RepyParityError}

secure_dispatch_module()
