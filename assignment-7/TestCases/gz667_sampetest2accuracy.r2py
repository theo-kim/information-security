# Valid WRITE on a non-empty file

# timer incase deadlock or loop forever
def time_out():
    log('Running too long, deadlock or loop forever!\n')
    exitall()
def time_limit(pause_in_seconds, call_function):
    def configured_timer_function():
        sleep(pause_in_seconds)
        call_function()
    return configured_timer_function


        
def run_test():
    # New File Operation, Clean up of existing file
    if "testfile.txt" in listfiles():
        removefile("testfile.txt")

    # Open File Function Call
    myfile = openfile("testfile.txt", True)  # Create a file

    # in case unexpected output due to wrong even-check
    try:
        # Write valid data to the file
        myfile.writeat("AAAAAAA", 0)
        # Write data over existing data in the file
        myfile.writeat("A", 7)

        # Read the file to check the contents
        assert('AAAAAAAA' == myfile.readat(8, 0))

    except RepyParityError:
        log("Valid Data blocked as non-even!\n")
    except (CodeUnsafeError, NameError) as e:
        log("Code error found. {}\n".format(e.args[-1]))
    except:
        log("Valid Data write to a file is unsuccessfull!\n")
    finally:
        myfile.close()
    exitall()

if callfunc == "initialize":
    configured_function = time_limit(5, time_out)
    createthread(configured_function)
    run_test()