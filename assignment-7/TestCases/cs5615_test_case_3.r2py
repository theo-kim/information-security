#test case 3: threading


testid = 4
testfilename1 = "test_thread1_"+ str(testid) + ".txt"


def ThreadOne():
    if testfilename1 in listfiles():
      removefile(testfilename1)

    myfile=openfile(testfilename1,True)  #Create a parity file

    # put some valid data in the file.
    myfile.writeat("BBBBBBBBBBBBBBBB",0)

    # I should be able to read it out.
    #assert('BB' == myfile.readat(None,8))

    # However, this write should fail...
    try:
      myfile.writeat("DDDDDDDDD",12)

    except RepyParityError:
        pass  # should happen

    #Close the file
    myfile.close()

def ThreadTwo():
    myfile=openfile(testfilename1,True)  #Create a parity file

    # put some valid data in the file.
    myfile.writeat("AA",2)
    myfile.writeat("EEEEEE",12)
    myfile.close()

def ThreadThree():
    myfile=openfile(testfilename1,True)  #Create a parity file

    # put some valid data in the file.
    myfile.writeat("AA",5)
    myfile.writeat("RRRRRR",12)
    log("this is thread three")
    myfile.close()

createthread(ThreadOne)
sleep(1)
createthread(ThreadTwo)